name: Generic schedule main default SLSA 2
on:
  schedule:
    - cron: "0 3 * * *"
  workflow_dispatch:

jobs:
  build:
    outputs:
      binary-name: ${{ steps.hash.outputs.binary-name }}
      digest: ${{ steps.hash.outputs.digest }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build artifact
        run: bazelisk build //:hello
      - name: Generate hash
        shell: bash
        id: hash
        run: |
          set -euo pipefail
          cp bazel-bin/hello_/hello ./hello
          DIGEST=$(sha256sum hello)
          DIGEST="${DIGEST//'%'/'%25'}"
          DIGEST="${DIGEST//$'\n'/'%0A'}"
          DIGEST="${DIGEST//$'\r'/'%0D'}"
          echo "::set-output name=binary-name::hello"
          echo "::set-output name=digest::$DIGEST"
      - name: Upload artifact
        uses: actions/upload-artifact@6673cd052c4cd6fcf4b4e6e60ea986c889389535 # v2.3.1
        with:
          name: ${{ steps.outputs.binary-name }}
          path: ${{ steps.outputs.binary-name }}
          if-no-files-found: error
          retention-days: 5

  provenance:
    needs: [build]
    permissions:
      id-token: write
      contents: read
    uses: slsa-framework/slsa-github-generator/.github/workflows/slsa2_provenance.yml@main
    with:
      subjects: "${{ needs.build.outputs.digest }}"

  verify:
    runs-on: ubuntu-latest
    needs: [build, provenance]
    steps:
      - name: Checkout code
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 #v2.4.0
      - name: Download binary
        uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741
        with:
          name: ${{ needs.build.outputs.binary-name }}
      - name: Download provenance
        uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741
        with:
          name: ${{ needs.provenance.outputs.attestation-name }}
      - name: Setup Go
        uses: actions/setup-go@f6164bd8c8acb4a71fb2791a8b6c4024ff038dab # v2.2.0
        with:
          go-version: "1.17"
      - name: Verify provenance
        env:
          BINARY: ${{ needs.build.outputs.binary-name }}
          PROVENANCE: ${{ needs.provenance.outputs.attestation-name }}
        run: ./.github/workflows/scripts/e2e-verify.sh

  if-succeeded:
    runs-on: ubuntu-latest
    needs: [build, provenance, verify]
    if: github.event_name == 'push' && github.event.head_commit.message == github.workflow && needs.build.result == 'success' && needs.provenance.result == 'success' && needs.verify.result == 'success'
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 #v2.4.0
      - run: ./.github/workflows/scripts/e2e-report-success.sh

  if-failed:
    runs-on: ubuntu-latest
    needs: [build, provenance, verify]
    if: always() && github.event_name == 'push' && github.event.head_commit.message == github.workflow && (needs.build.result == 'failure' || needs.provenance.result == 'failure' || needs.verify.result == 'failure')
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 #v2.4.0
      - run: ./.github/workflows/scripts/e2e-report-failure.sh
