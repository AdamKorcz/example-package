on:
  schedule:
    - cron: "0 2 * * *"
  workflow_dispatch:

permissions: read-all

env:
  GH_TOKEN: ${{ secrets.E2E_GO_TOKEN }}
  ISSUE_REPOSITORY: slsa-framework/slsa-github-generator
  # WARNING: update build job if CONFIG_FILE changes.
  CONFIG_FILE: .github/configs-go/config-noldflags.yml

jobs:
  # TODO: support multiple config files.
  build-one:
    permissions:
      id-token: write # For signing.
      contents: write # For asset uploads.
      actions: read # For the entrypoint.
    uses: slsa-framework/slsa-github-generator/.github/workflows/builder_go_slsa3.yml@main
    with:
      go-version: 1.18
      # We cannot use ${{ env.CONFIG_FILE }} because env variables are not available.
      config-file: .github/configs-go/config-noldflags.yml
      compile-builder: true

  verify-one:
    runs-on: ubuntu-latest
    needs: build-one
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # tag=v2.4.0
      - uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741 # tag=v3.0.0
        with:
          name: ${{ needs.build-one.outputs.go-binary-name }}
      - uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741 # tag=v3.0.0
        with:
          name: ${{ needs.build-one.outputs.go-binary-name }}.intoto.jsonl
      - uses: actions/setup-go@f6164bd8c8acb4a71fb2791a8b6c4024ff038dab # tag=v2.2.0
        with:
          go-version: "1.18"
      - env:
          BINARY: ${{ needs.build-one.outputs.go-binary-name }}
          PROVENANCE: ${{ needs.build-one.outputs.go-binary-name }}.intoto.jsonl
        run: ./.github/workflows/scripts/e2e.go.default.verify.sh

  if-succeeded-one:
    runs-on: ubuntu-latest
    needs: [build-one, verify-one]
    if: needs.build-one.result == 'success' && needs.verify-one.result == 'success'
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # tag=v2.4.0
      - run: ./.github/workflows/scripts/e2e-report-success.sh

  if-failed-one:
    runs-on: ubuntu-latest
    needs: [build-one, verify-one]
    if: always() && (needs.build-one.result == 'failure' || needs.verify-one.result == 'failure')
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # tag=v2.4.0
      - run: ./.github/workflows/scripts/e2e-report-failure.sh

  build-two:
    permissions:
      id-token: write # For signing.
      contents: write # For asset uploads.
      actions: read # For the entrypoint.
    uses: slsa-framework/slsa-github-generator/.github/workflows/builder_go_slsa3.yml@main
    with:
      go-version: 1.18
      # We cannot use ${{ env.CONFIG_FILE }} because env variables are not available.
      config-file: .github/configs-go/config-noldflags-2.yml
      compile-builder: true

  verify-two:
    runs-on: ubuntu-latest
    needs: build-two
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # tag=v2.4.0
      - uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741
        with:
          name: ${{ needs.build-two.outputs.go-binary-name }}
      - uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741 # tag=v3.0.0
        with:
          name: ${{ needs.build-two.outputs.go-binary-name }}.intoto.jsonl
      - uses: actions/setup-go@f6164bd8c8acb4a71fb2791a8b6c4024ff038dab # tag=v2.2.0
        with:
          go-version: "1.18"
      - env:
          BINARY: ${{ needs.build-two.outputs.go-binary-name }}
          PROVENANCE: ${{ needs.build-two.outputs.go-binary-name }}.intoto.jsonl
        run: ./.github/workflows/scripts/e2e.go.default.verify.sh

  if-succeeded-two:
    runs-on: ubuntu-latest
    needs: [build-two, verify-two]
    if: needs.build-two.result == 'success' && needs.verify-two.result == 'success'
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # tag=v2.4.0
      - run: ./.github/workflows/scripts/e2e-report-success.sh

  if-failed-two:
    runs-on: ubuntu-latest
    needs: [build-two, verify-two]
    if: always() && (needs.build-two.result == 'failure' || needs.verify-two.result == 'failure')
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # tag=v2.4.0
      - run: ./.github/workflows/scripts/e2e-report-failure.sh
