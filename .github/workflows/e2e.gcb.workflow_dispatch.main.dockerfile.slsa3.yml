# This e2e test performs the following via a GitHub Actions workflow_dispatch event.
# - Trigger a GCB build via manual invocation with the cloudbuild.yaml
# - TODO: Verify the created provenance attestation.

on:
  # TODO: Add a daily schedule cron for verify.
  schedule:
    # Twice a month scheduled cron for rebuilding.
    - cron: "0 3 1,15 * *"
  workflow_dispatch:

permissions: {}

env:
  PAT_TOKEN: ${{ secrets.E2E_CONTAINER_TOKEN }}
  GH_TOKEN: ${{ github.token }}
  ISSUE_REPOSITORY: slsa-framework/slsa-github-generator

  IMAGE_REGISTRY: us-west2-docker.pkg.dev
  IMAGE_NAME: slsa-tooling/example-package-repo/e2e-gcb-workflow_dispatch-main-dockerfile-slsa3

jobs:
  dispatch:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' && github.event.schedule == '0 3 1,15 * *'
    permissions:
      actions: write
      contents: write
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
      - run: ./.github/workflows/scripts/e2e-dispatch.sh

  # Trigger the GCB build
  build:
    if: github.event_name == 'workflow_dispatch'
    permissions:
      id-token: write # For auth.
      contents: read # For reading repository contents.
      packages: write # For writing container images.
    outputs:
      image: ${{ steps.image.outputs.image }}
      digest: ${{ steps.build.outputs.digest }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v1"
        with:
          workload_identity_provider: "projects/819720953812/locations/global/workloadIdentityPools/example-package-pool/providers/example-package-provider"
          service_account: "example-package-user@slsa-tooling.iam.gserviceaccount.com"
      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@d51b5346f85640ec2aa2fa057354d2b82c2fcbce" # v1.0.1
      - name: Trigger build via manual invocation
        id: build
        run: |
          gcloud builds submit --region=us-west2 --project slsa-tooling --suppress-logs --tag ${IMAGE_REGISTRY}/${IMAGE_PROJECT}/${IMAGE_NAME} --gcs-log-dir:gs://slsa-tooling_coudbuild/

          # Retrieve the latest build ID
          # TODO: How do we avoid races? Can we directly get the output of builds submit?
          export BUILD_ID=$(gcloud builds --verbosity debug list --region=us-west2 --project slsa-tooling --limit=1 --format="value(id)")
          echo "Created build with build id ${BUILD_ID}..."

          export IMAGE_DIGEST=$(gcloud builds --verbosity debug describe ${BUILD_ID} --project=slsa-tooling --region=us-west2 --format="value(results.images[0].digest)")
          echo "Retrieved image digest ${IMAGE_DIGEST}..."

          export ESCAPED_IMAGE_NAME=$(echo $IMAGE_NAME | sed "s/\//%2F/g")
          gcloud artifacts docker images describe "${IMAGE_REGISTRY}"/"${ESCAPED_IMAGE_NAME}@${IMAGE_DIGEST}" --verbosity debug --show-provenance
