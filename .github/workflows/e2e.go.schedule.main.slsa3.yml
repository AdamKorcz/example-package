name: go schedule main SLSA3

on: 
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

permissions: read-all

env:
  TARGET_REPOSITORY: slsa-framework/slsa-github-generator-go
  #TARGET_REPOSITORY: laurentsimon/slsa-on-github-test
  THIS_FILE: e2e.go.schedule.main.slsa3.yml

jobs:            
  #TODO: support multiple config files.
  build:
    permissions:
      id-token: write # For signing.
      contents: write # For asset uploads.
    uses: slsa-framework/slsa-github-generator-go/.github/workflows/slsa3_builder.yml@main
    with:
      go-version: 1.18
      #TODO: support different options
  
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - run: |
#           exit 1
    
  verify:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 #v2.4.0
      - uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741
        with:
          name: ${{ needs.build.outputs.go-binary-name }}
      - uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741
        with:
          name: ${{ needs.build.outputs.go-binary-name }}.intoto.jsonl
      - uses: actions/setup-go@f6164bd8c8acb4a71fb2791a8b6c4024ff038dab # v2.2.0
        with:
          go-version: '1.17'
      - run: |
          set -euo pipefail
        
          source "./.github/workflows/scripts/assert.sh"
          
          go env -w GOFLAGS=-mod=mod
          
          # Install from HEAD
          go install github.com/slsa-framework/slsa-verifier@latest
             
          # Default parameters.
          RES=$(slsa-verifier --artifact-path ${{ needs.build.outputs.go-binary-name }} --provenance ${{ needs.build.outputs.go-binary-name }}.intoto.jsonl --source github.com/$GITHUB_REPOSITORY)
          assert_eq($RES, 0)
          
          # Main branch
          RES=$(slsa-verifier --branch main --artifact-path ${{ needs.build.outputs.go-binary-name }} --provenance ${{ needs.build.outputs.go-binary-name }}.intoto.jsonl --source github.com/$GITHUB_REPOSITORY)
          assert_eq($RES, 0)
          
          # Wrong branch
          RES=$(slsa-verifier --branch not-main --artifact-path ${{ needs.build.outputs.go-binary-name }} --provenance ${{ needs.build.outputs.go-binary-name }}.intoto.jsonl --source github.com/$GITHUB_REPOSITORY)
          assert_not_eq($RES, 0)
          
          # Wrong tag
          RES=$(slsa-verifier --tag v1.2.3 --artifact-path ${{ needs.build.outputs.go-binary-name }} --provenance ${{ needs.build.outputs.go-binary-name }}.intoto.jsonl --source github.com/$GITHUB_REPOSITORY)
          assert_not_eq($RES, 0)
          
          # Wrong versioned-tag
          RES=$(slsa-verifier --versioned-tag v1.2.3 --artifact-path ${{ needs.build.outputs.go-binary-name }} --provenance ${{ needs.build.outputs.go-binary-name }}.intoto.jsonl --source github.com/$GITHUB_REPOSITORY)
          assert_not_eq($RES, 0)
          
          #TODO: read out the provenance information once we print it
          #TODO: previous releases, curl the binary directly. We should list the releases and run all commands automatically
          
  if-failed:
    runs-on: ubuntu-latest
    needs: [build,verify]
    if: always() && (needs.build.result == 'failure' || needs.verify.result == 'failure')
    env:
      GH_TOKEN: ${{ secrets.E2E_GO_TOKEN }}
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 #v2.4.0
      - run: |
          set -euo pipefail

          ./.github/workflows/scripts/e2e-report-failure.sh
