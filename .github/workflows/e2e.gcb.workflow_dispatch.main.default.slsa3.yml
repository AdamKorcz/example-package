# This e2e test performs the following via a GitHub Actions workflow_dispatch event.
# - Trigger a GCB build via manual invocation with the cloudbuild.yaml
# - TODO: Verify the created provenance attestation.

on:
  # TODO: Make this into a biweekly rebuild, but a daily verify.
  # schedule:
  #   - cron: "0 3 * * *"
  workflow_dispatch:

permissions: {}

env:
  PAT_TOKEN: ${{ secrets.E2E_CONTAINER_TOKEN }}
  GH_TOKEN: ${{ github.token }}
  ISSUE_REPOSITORY: slsa-framework/slsa-github-generator

  IMAGE_REGISTRY: us-west2-docker.pkg.dev
  # TODO: use variable substitution in cloudbuild.yaml here.
  IMAGE_NAME: slsa-tooling/example-package-repo/example-package-image

jobs:
  dispatch:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2.4.0
      - run: ./.github/workflows/scripts/e2e-dispatch.sh

  # Trigger the GCB build
  build:
    if: github.event_name == 'workflow_dispatch'
    permissions:
      id-token: write # For auth.
      contents: read # For reading repository contents.
      packages: write # For writing container images.
    outputs:
      image: ${{ steps.image.outputs.image }}
      digest: ${{ steps.build.outputs.digest }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # v2.3.4
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          workload_identity_provider: 'projects/819720953812/locations/global/workloadIdentityPools/example-package-pool/providers/example-package-provider'
          service_account: 'example-package-user@slsa-tooling.iam.gserviceaccount.com'
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@877d4953d2c70a0ba7ef3290ae968eb24af233bb' # v0.6.0
      - name: Trigger build via manual invocation
        id: build
        run: |
          gcloud builds submit --region=us-west2 --config cloudbuild.yaml --project slsa-tooling

          # Retrieve the latest build ID
          # TODO: How do we avoid races? Can we get the output of builds submit
          export BUILD_ID=$(gcloud builds list --region=us-west2 --project slsa-tooling --limit=1 --format="value(id)")
          export IMAGE_DIGEST=$(gcloud builds describe f9bf0c3b-961d-42aa-85f5-3cd2d9401c44 --project=slsa-tooling --region=us-west2 --format="value(results.images[0].digest)")

          gcloud artifacts docker images describe "${IMAGE_REGISTRY}"/"${IMAGE_NAME}"@"${IMAGE_DIGEST}" --show-provenance
